/*! jQuery v2.1.1 -css,-css/addGetHookIf,-css/curCSS,-css/defaultDisplay,-css/hiddenVisibleSelectors,-css/support,-css/swap,-css/var/cssExpand,-css/var/getStyles,-css/var/isHidden,-css/var/rmargin,-css/var/rnumnonpx,-effects,-effects/Tween,-effects/animatedSelector,-dimensions,-offset,-deprecated,-event-alias,-wrap | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!(function (a, b) { typeof module === 'object' && typeof module.exports === 'object' ? module.exports = a.document ? b(a, !0) : function (a) { if (!a.document) throw new Error('jQuery requires a window with a document'); return b(a); } : b(a); }(typeof window !== 'undefined' ? window : this, (a, b) => {
  const c = []; const d = c.slice; const e = c.concat; const f = c.push; const g = c.indexOf; const h = {}; const i = h.toString; const j = h.hasOwnProperty; const k = {}; const l = a.document; const m = '2.1.1 -css,-css/addGetHookIf,-css/curCSS,-css/defaultDisplay,-css/hiddenVisibleSelectors,-css/support,-css/swap,-css/var/cssExpand,-css/var/getStyles,-css/var/isHidden,-css/var/rmargin,-css/var/rnumnonpx,-effects,-effects/Tween,-effects/animatedSelector,-dimensions,-offset,-deprecated,-event-alias,-wrap'; var n = function (a, b) { return new n.fn.init(a, b); }; const o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; const p = /^-ms-/; const q = /-([\da-z])/gi; const r = function (a, b) { return b.toUpperCase(); }; n.fn = n.prototype = {
    jquery: m, constructor: n, selector: '', length: 0, toArray() { return d.call(this); }, get(a) { return a != null ? a < 0 ? this[a + this.length] : this[a] : d.call(this); }, pushStack(a) { const b = n.merge(this.constructor(), a); return b.prevObject = this, b.context = this.context, b; }, each(a, b) { return n.each(this, a, b); }, map(a) { return this.pushStack(n.map(this, (b, c) => a.call(b, c, b))); }, slice() { return this.pushStack(d.apply(this, arguments)); }, first() { return this.eq(0); }, last() { return this.eq(-1); }, eq(a) { const b = this.length; const c = +a + (a < 0 ? b : 0); return this.pushStack(c >= 0 && b > c ? [this[c]] : []); }, end() { return this.prevObject || this.constructor(null); }, push: f, sort: c.sort, splice: c.splice,
  }, n.extend = n.fn.extend = function () { let a; let b; let c; let d; let e; let f; let g = arguments[0] || {}; let h = 1; const i = arguments.length; let j = !1; for (typeof g === 'boolean' && (j = g, g = arguments[h] || {}, h++), typeof g === 'object' || n.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++) if ((a = arguments[h]) != null) for (b in a)c = g[b], d = a[b], g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1, f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {}, g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d)); return g; }, n.extend({
    expando: `jQuery${(m + Math.random()).replace(/\D/g, '')}`, isReady: !0, error(a) { throw new Error(a); }, noop() {}, isFunction(a) { return n.type(a) === 'function'; }, isArray: Array.isArray, isWindow(a) { return a != null && a === a.window; }, isNumeric(a) { return !n.isArray(a) && a - parseFloat(a) >= 0; }, isPlainObject(a) { return n.type(a) !== 'object' || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, 'isPrototypeOf') ? !1 : !0; }, isEmptyObject(a) { let b; for (b in a) return !1; return !0; }, type(a) { return a == null ? `${a}` : typeof a === 'object' || typeof a === 'function' ? h[i.call(a)] || 'object' : typeof a; }, globalEval(a) { let b; const c = eval; a = n.trim(a), a && (a.indexOf('use strict') === 1 ? (b = l.createElement('script'), b.text = a, l.head.appendChild(b).parentNode.removeChild(b)) : c(a)); }, camelCase(a) { return a.replace(p, 'ms-').replace(q, r); }, nodeName(a, b) { return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase(); }, each(a, b, c) { let d; let e = 0; const f = a.length; const g = s(a); if (c) { if (g) { for (;f > e; e++) if (d = b.apply(a[e], c), d === !1) break; } else for (e in a) if (d = b.apply(a[e], c), d === !1) break; } else if (g) { for (;f > e; e++) if (d = b.call(a[e], e, a[e]), d === !1) break; } else for (e in a) if (d = b.call(a[e], e, a[e]), d === !1) break; return a; }, trim(a) { return a == null ? '' : (`${a}`).replace(o, ''); }, makeArray(a, b) { const c = b || []; return a != null && (s(Object(a)) ? n.merge(c, typeof a === 'string' ? [a] : a) : f.call(c, a)), c; }, inArray(a, b, c) { return b == null ? -1 : g.call(b, a, c); }, merge(a, b) { for (var c = +b.length, d = 0, e = a.length; c > d; d++)a[e++] = b[d]; return a.length = e, a; }, grep(a, b, c) { for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++)d = !b(a[f], f), d !== h && e.push(a[f]); return e; }, map(a, b, c) { let d; let f = 0; const g = a.length; const h = s(a); const i = []; if (h) for (;g > f; f++)d = b(a[f], f, c), d != null && i.push(d); else for (f in a)d = b(a[f], f, c), d != null && i.push(d); return e.apply([], i); }, guid: 1, proxy(a, b) { let c; let e; let f; return typeof b === 'string' && (c = a[b], b = a, a = c), n.isFunction(a) ? (e = d.call(arguments, 2), f = function () { return a.apply(b || this, e.concat(d.call(arguments))); }, f.guid = a.guid = a.guid || n.guid++, f) : void 0; }, now: Date.now, support: k,
  }), n.each('Boolean Number String Function Array Date RegExp Object Error'.split(' '), (a, b) => { h[`[object ${b}]`] = b.toLowerCase(); }); function s(a) { const b = a.length; const c = n.type(a); return c === 'function' || n.isWindow(a) ? !1 : a.nodeType === 1 && b ? !0 : c === 'array' || b === 0 || typeof b === 'number' && b > 0 && b - 1 in a; } const t = a.document.documentElement; let u; const v = t.matches || t.webkitMatchesSelector || t.mozMatchesSelector || t.oMatchesSelector || t.msMatchesSelector; const w = function (a, b) { if (a === b) return u = !0, 0; const c = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition(b); return c ? 1 & c ? a === l || n.contains(l, a) ? -1 : b === l || n.contains(l, b) ? 1 : 0 : 4 & c ? -1 : 1 : a.compareDocumentPosition ? -1 : 1; }; n.extend({
    find(a, b, c, d) { let e; let f; let g = 0; if (c = c || [], b = b || l, !a || typeof a !== 'string') return c; if ((f = b.nodeType) !== 1 && f !== 9) return []; if (d) while (e = d[g++])n.find.matchesSelector(e, a) && c.push(e); else n.merge(c, b.querySelectorAll(a)); return c; }, unique(a) { let b; const c = []; let d = 0; let e = 0; if (u = !1, a.sort(w), u) { while (b = a[d++])b === a[d] && (e = c.push(d)); while (e--)a.splice(c[e], 1); } return a; }, text(a) { let b; let c = ''; let d = 0; const e = a.nodeType; if (e) { if (e === 1 || e === 9 || e === 11) return a.textContent; if (e === 3 || e === 4) return a.nodeValue; } else while (b = a[d++])c += n.text(b); return c; }, contains(a, b) { const c = a.nodeType === 9 ? a.documentElement : a; const d = b && b.parentNode; return a === d || !(!d || d.nodeType !== 1 || !c.contains(d)); }, isXMLDoc(a) { return (a.ownerDocument || a).documentElement.nodeName !== 'HTML'; }, expr: { attrHandle: {}, match: { bool: /^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$/i, needsContext: /^[\x20\t\r\n\f]*[>+~]/ } },
  }), n.extend(n.find, { matches(a, b) { return n.find(a, null, null, b); }, matchesSelector(a, b) { return v.call(a, b); }, attr(a, b) { return a.getAttribute(b); } }); const x = n.expr.match.needsContext; const y = /^<(\w+)\s*\/?>(?:<\/\1>|)$/; const z = /^.[^:#\[\.,]*$/; function A(a, b, c) { if (n.isFunction(b)) return n.grep(a, (a, d) => !!b.call(a, d, a) !== c); if (b.nodeType) return n.grep(a, a => a === b !== c); if (typeof b === 'string') { if (z.test(b)) return n.filter(b, a, c); b = n.filter(b, a); } return n.grep(a, a => g.call(b, a) >= 0 !== c); }n.filter = function (a, b, c) { const d = b[0]; return c && (a = `:not(${a})`), b.length === 1 && d.nodeType === 1 ? n.find.matchesSelector(d, a) ? [d] : [] : n.find.matches(a, n.grep(b, a => a.nodeType === 1)); }, n.fn.extend({
    find(a) { let b; const c = this.length; let d = []; const e = this; if (typeof a !== 'string') return this.pushStack(n(a).filter(function () { for (b = 0; c > b; b++) if (n.contains(e[b], this)) return !0; })); for (b = 0; c > b; b++)n.find(a, e[b], d); return d = this.pushStack(c > 1 ? n.unique(d) : d), d.selector = this.selector ? `${this.selector} ${a}` : a, d; }, filter(a) { return this.pushStack(A(this, a || [], !1)); }, not(a) { return this.pushStack(A(this, a || [], !0)); }, is(a) { return !!A(this, typeof a === 'string' && x.test(a) ? n(a) : a || [], !1).length; },
  }); let B; const C = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/; const D = n.fn.init = function (a, b) { let c; let d; if (!a) return this; if (typeof a === 'string') { if (c = a[0] === '<' && a[a.length - 1] === '>' && a.length >= 3 ? [null, a, null] : C.exec(a), !c || !c[1] && b) return !b || b.jquery ? (b || B).find(a) : this.constructor(b).find(a); if (c[1]) { if (b = b instanceof n ? b[0] : b, n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)), y.test(c[1]) && n.isPlainObject(b)) for (c in b)n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]); return this; } return d = l.getElementById(c[2]), d && d.parentNode && (this.length = 1, this[0] = d), this.context = l, this.selector = a, this; } return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : n.isFunction(a) ? typeof B.ready !== 'undefined' ? B.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), n.makeArray(a, this)); }; D.prototype = n.fn, B = n(l); const E = /^(?:parents|prev(?:Until|All))/; const F = {
    children: !0, contents: !0, next: !0, prev: !0,
  }; n.extend({ dir(a, b, c) { const d = []; const e = void 0 !== c; while ((a = a[b]) && a.nodeType !== 9) if (a.nodeType === 1) { if (e && n(a).is(c)) break; d.push(a); } return d; }, sibling(a, b) { for (var c = []; a; a = a.nextSibling)a.nodeType === 1 && a !== b && c.push(a); return c; } }), n.fn.extend({
    has(a) { const b = n(a, this); const c = b.length; return this.filter(function () { for (let a = 0; c > a; a++) if (n.contains(this, b[a])) return !0; }); }, closest(a, b) { for (var c, d = 0, e = this.length, f = [], g = x.test(a) || typeof a !== 'string' ? n(a, b || this.context) : 0; e > d; d++) for (c = this[d]; c && c !== b; c = c.parentNode) if (c.nodeType < 11 && (g ? g.index(c) > -1 : c.nodeType === 1 && n.find.matchesSelector(c, a))) { f.push(c); break; } return this.pushStack(f.length > 1 ? n.unique(f) : f); }, index(a) { return a ? typeof a === 'string' ? g.call(n(a), this[0]) : g.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1; }, add(a, b) { return this.pushStack(n.unique(n.merge(this.get(), n(a, b)))); }, addBack(a) { return this.add(a == null ? this.prevObject : this.prevObject.filter(a)); },
  }); function G(a, b) { while ((a = a[b]) && a.nodeType !== 1);return a; }n.each({
    parent(a) { const b = a.parentNode; return b && b.nodeType !== 11 ? b : null; }, parents(a) { return n.dir(a, 'parentNode'); }, parentsUntil(a, b, c) { return n.dir(a, 'parentNode', c); }, next(a) { return G(a, 'nextSibling'); }, prev(a) { return G(a, 'previousSibling'); }, nextAll(a) { return n.dir(a, 'nextSibling'); }, prevAll(a) { return n.dir(a, 'previousSibling'); }, nextUntil(a, b, c) { return n.dir(a, 'nextSibling', c); }, prevUntil(a, b, c) { return n.dir(a, 'previousSibling', c); }, siblings(a) { return n.sibling((a.parentNode || {}).firstChild, a); }, children(a) { return n.sibling(a.firstChild); }, contents(a) { return a.contentDocument || n.merge([], a.childNodes); },
  }, (a, b) => { n.fn[a] = function (c, d) { let e = n.map(this, b, c); return a.slice(-5) !== 'Until' && (d = c), d && typeof d === 'string' && (e = n.filter(d, e)), this.length > 1 && (F[a] || n.unique(e), E.test(a) && e.reverse()), this.pushStack(e); }; }); const H = /\S+/g; const I = {}; function J(a) { const b = I[a] = {}; return n.each(a.match(H) || [], (a, c) => { b[c] = !0; }), b; }n.Callbacks = function (a) {
    a = typeof a === 'string' ? I[a] || J(a) : n.extend({}, a); let b; let c; let d; let e; let f; let g; let h = []; let i = !a.once && []; var j = function (l) { for (b = a.memory && l, c = !0, g = e || 0, e = 0, f = h.length, d = !0; h && f > g; g++) if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) { b = !1; break; }d = !1, h && (i ? i.length && j(i.shift()) : b ? h = [] : k.disable()); }; var k = {
      add() { if (h) { const c = h.length; !(function g(b) { n.each(b, (b, c) => { const d = n.type(c); d === 'function' ? a.unique && k.has(c) || h.push(c) : c && c.length && d !== 'string' && g(c); }); }(arguments)), d ? f = h.length : b && (e = c, j(b)); } return this; }, remove() { return h && n.each(arguments, (a, b) => { let c; while ((c = n.inArray(b, h, c)) > -1)h.splice(c, 1), d && (f >= c && f--, g >= c && g--); }), this; }, has(a) { return a ? n.inArray(a, h) > -1 : !(!h || !h.length); }, empty() { return h = [], f = 0, this; }, disable() { return h = i = b = void 0, this; }, disabled() { return !h; }, lock() { return i = void 0, b || k.disable(), this; }, locked() { return !i; }, fireWith(a, b) { return !h || c && !i || (b = b || [], b = [a, b.slice ? b.slice() : b], d ? i.push(b) : j(b)), this; }, fire() { return k.fireWith(this, arguments), this; }, fired() { return !!c; },
    }; return k;
  }, n.extend({
    Deferred(a) {
      const b = [['resolve', 'done', n.Callbacks('once memory'), 'resolved'], ['reject', 'fail', n.Callbacks('once memory'), 'rejected'], ['notify', 'progress', n.Callbacks('memory')]]; let c = 'pending'; var d = {
        state() { return c; }, always() { return e.done(arguments).fail(arguments), this; }, then() { let a = arguments; return n.Deferred((c) => { n.each(b, (b, f) => { const g = n.isFunction(a[b]) && a[b]; e[f[1]](function () { const a = g && g.apply(this, arguments); a && n.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[`${f[0]}With`](this === d ? c.promise() : this, g ? [a] : arguments); }); }), a = null; }).promise(); }, promise(a) { return a != null ? n.extend(a, d) : d; },
      }; var e = {}; return d.pipe = d.then, n.each(b, (a, f) => { const g = f[2]; const h = f[3]; d[f[1]] = g.add, h && g.add(() => { c = h; }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function () { return e[`${f[0]}With`](this === e ? d : this, arguments), this; }, e[`${f[0]}With`] = g.fireWith; }), d.promise(e), a && a.call(e, e), e;
    },
    when(a) { let b = 0; const c = d.call(arguments); const e = c.length; let f = e !== 1 || a && n.isFunction(a.promise) ? e : 0; const g = f === 1 ? a : n.Deferred(); const h = function (a, b, c) { return function (e) { b[a] = this, c[a] = arguments.length > 1 ? d.call(arguments) : e, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c); }; }; let i; let j; let k; if (e > 1) for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++)c[b] && n.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f; return f || g.resolveWith(k, c), g.promise(); },
  }); let K; n.fn.ready = function (a) { return n.ready.promise().done(a), this; }, n.extend({
    isReady: !1, readyWait: 1, holdReady(a) { a ? n.readyWait++ : n.ready(!0); }, ready(a) { (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, a !== !0 && --n.readyWait > 0 || (K.resolveWith(l, [n]), n.fn.triggerHandler && (n(l).triggerHandler('ready'), n(l).off('ready')))); },
  }); function L() { l.removeEventListener('DOMContentLoaded', L, !1), a.removeEventListener('load', L, !1), n.ready(); }n.ready.promise = function (b) { return K || (K = n.Deferred(), l.readyState === 'complete' ? setTimeout(n.ready) : (l.addEventListener('DOMContentLoaded', L, !1), a.addEventListener('load', L, !1))), K.promise(b); }, n.ready.promise(); const M = n.access = function (a, b, c, d, e, f, g) { let h = 0; const i = a.length; let j = c == null; if (n.type(c) === 'object') { e = !0; for (h in c)n.access(a, b, h, c[h], !0, f, g); } else if (void 0 !== d && (e = !0, n.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function (a, b, c) { return j.call(n(a), c); })), b)) for (;i > h; h++)b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c))); return e ? a : j ? b.call(a) : i ? b(a[0], c) : f; }; n.acceptData = function (a) { return a.nodeType === 1 || a.nodeType === 9 || !+a.nodeType; }; function N() { Object.defineProperty(this.cache = {}, 0, { get() { return {}; } }), this.expando = n.expando + Math.random(); }N.uid = 1, N.accepts = n.acceptData, N.prototype = {
    key(a) { if (!N.accepts(a)) return 0; const b = {}; let c = a[this.expando]; if (!c) { c = N.uid++; try { b[this.expando] = { value: c }, Object.defineProperties(a, b); } catch (d) { b[this.expando] = c, n.extend(a, b); } } return this.cache[c] || (this.cache[c] = {}), c; }, set(a, b, c) { let d; const e = this.key(a); const f = this.cache[e]; if (typeof b === 'string')f[b] = c; else if (n.isEmptyObject(f))n.extend(this.cache[e], b); else for (d in b)f[d] = b[d]; return f; }, get(a, b) { const c = this.cache[this.key(a)]; return void 0 === b ? c : c[b]; }, access(a, b, c) { let d; return void 0 === b || b && typeof b === 'string' && void 0 === c ? (d = this.get(a, b), void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b); }, remove(a, b) { let c; let d; let e; const f = this.key(a); const g = this.cache[f]; if (void 0 === b) this.cache[f] = {}; else { n.isArray(b) ? d = b.concat(b.map(n.camelCase)) : (e = n.camelCase(b), b in g ? d = [b, e] : (d = e, d = d in g ? [d] : d.match(H) || [])), c = d.length; while (c--) delete g[d[c]]; } }, hasData(a) { return !n.isEmptyObject(this.cache[a[this.expando]] || {}); }, discard(a) { a[this.expando] && delete this.cache[a[this.expando]]; },
  }; const O = new N();
  const P = new N(); const Q = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;
  const R = /([A-Z])/g; function S(a, b, c) { let d; if (void 0 === c && a.nodeType === 1) if (d = `data-${b.replace(R, '-$1').toLowerCase()}`, c = a.getAttribute(d), typeof c === 'string') { try { c = c === 'true' ? !0 : c === 'false' ? !1 : c === 'null' ? null : `${+c}` === c ? +c : Q.test(c) ? n.parseJSON(c) : c; } catch (e) {}P.set(a, b, c); } else c = void 0; return c; }n.extend({
    hasData(a) { return P.hasData(a) || O.hasData(a); }, data(a, b, c) { return P.access(a, b, c); }, removeData(a, b) { P.remove(a, b); }, _data(a, b, c) { return O.access(a, b, c); }, _removeData(a, b) { O.remove(a, b); },
  }), n.fn.extend({ data(a, b) { let c; let d; let e; const f = this[0]; const g = f && f.attributes; if (void 0 === a) { if (this.length && (e = P.get(f), f.nodeType === 1 && !O.get(f, 'hasDataAttrs'))) { c = g.length; while (c--)g[c] && (d = g[c].name, d.indexOf('data-') === 0 && (d = n.camelCase(d.slice(5)), S(f, d, e[d]))); O.set(f, 'hasDataAttrs', !0); } return e; } return typeof a === 'object' ? this.each(function () { P.set(this, a); }) : M(this, function (b) { let c; const d = n.camelCase(a); if (f && void 0 === b) { if (c = P.get(f, a), void 0 !== c) return c; if (c = P.get(f, d), void 0 !== c) return c; if (c = S(f, d, void 0), void 0 !== c) return c; } else this.each(function () { const c = P.get(this, d); P.set(this, d, b), a.indexOf('-') !== -1 && void 0 !== c && P.set(this, a, b); }); }, null, b, arguments.length > 1, null, !0); }, removeData(a) { return this.each(function () { P.remove(this, a); }); } }), n.extend({ queue(a, b, c) { let d; return a ? (b = `${b || 'fx'}queue`, d = O.get(a, b), c && (!d || n.isArray(c) ? d = O.access(a, b, n.makeArray(c)) : d.push(c)), d || []) : void 0; }, dequeue(a, b) { b = b || 'fx'; const c = n.queue(a, b); let d = c.length; let e = c.shift(); const f = n._queueHooks(a, b); const g = function () { n.dequeue(a, b); }; e === 'inprogress' && (e = c.shift(), d--), e && (b === 'fx' && c.unshift('inprogress'), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire(); }, _queueHooks(a, b) { const c = `${b}queueHooks`; return O.get(a, c) || O.access(a, c, { empty: n.Callbacks('once memory').add(() => { O.remove(a, [`${b}queue`, c]); }) }); } }), n.fn.extend({
    queue(a, b) { let c = 2; return typeof a !== 'string' && (b = a, a = 'fx', c--), arguments.length < c ? n.queue(this[0], a) : void 0 === b ? this : this.each(function () { const c = n.queue(this, a, b); n._queueHooks(this, a), a === 'fx' && c[0] !== 'inprogress' && n.dequeue(this, a); }); }, dequeue(a) { return this.each(function () { n.dequeue(this, a); }); }, clearQueue(a) { return this.queue(a || 'fx', []); }, promise(a, b) { let c; let d = 1; const e = n.Deferred(); const f = this; let g = this.length; const h = function () { --d || e.resolveWith(f, [f]); }; typeof a !== 'string' && (b = a, a = void 0), a = a || 'fx'; while (g--)c = O.get(f[g], `${a}queueHooks`), c && c.empty && (d++, c.empty.add(h)); return h(), e.promise(b); },
  }); const T = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source; const U = /^(?:checkbox|radio)$/i; !(function () { const a = l.createDocumentFragment(); const b = a.appendChild(l.createElement('div')); const c = l.createElement('input'); c.setAttribute('type', 'radio'), c.setAttribute('checked', 'checked'), c.setAttribute('name', 't'), b.appendChild(c), k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = '<textarea>x</textarea>', k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue; }()); const V = 'undefined'; k.focusinBubbles = 'onfocusin' in a; const W = /^key/; const X = /^(?:mouse|pointer|contextmenu)|click/; const Y = /^(?:focusinfocus|focusoutblur)$/; const Z = /^([^.]*)(?:\.(.+)|)$/; function $() { return !0; } function _() { return !1; } function ab() { try { return l.activeElement; } catch (a) {} }n.event = {
    global: {},
    add(a, b, c, d, e) {
      let f; let g; let h; let i; let j; let k; let l; let m; let o; let p; let q; const r = O.get(a); if (r) {
        c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = n.guid++), (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r.handle = function (b) { return typeof n !== V && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0; }), b = (b || '').match(H) || [''], j = b.length; while (j--) {
          h = Z.exec(b[j]) || [], o = q = h[1], p = (h[2] || '').split('.').sort(), o && (l = n.event.special[o] || {}, o = (e ? l.delegateType : l.bindType) || o, l = n.event.special[o] || {}, k = n.extend({
            type: o, origType: q, data: d, handler: c, guid: c.guid, selector: e, needsContext: e && n.expr.match.needsContext.test(e), namespace: p.join('.'),
          }, f), (m = i[o]) || (m = i[o] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g, !1)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), n.event.global[o] = !0);
        }
      }
    },
    remove(a, b, c, d, e) { let f; let g; let h; let i; let j; let k; let l; let m; let o; let p; let q; const r = O.hasData(a) && O.get(a); if (r && (i = r.events)) { b = (b || '').match(H) || [''], j = b.length; while (j--) if (h = Z.exec(b[j]) || [], o = q = h[1], p = (h[2] || '').split('.').sort(), o) { l = n.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, m = i[o] || [], h = h[2] && new RegExp(`(^|\\.)${p.join('\\.(?:.*\\.|)')}(\\.|$)`), g = f = m.length; while (f--)k = m[f], !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && (d !== '**' || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k)); g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle), delete i[o]); } else for (o in i)n.event.remove(a, o + b[j], c, d, !0); n.isEmptyObject(i) && (delete r.handle, O.remove(a, 'events')); } },
    trigger(b, c, d, e) { let f; let g; let h; let i; let k; let m; let o; const p = [d || l]; let q = j.call(b, 'type') ? b.type : b; let r = j.call(b, 'namespace') ? b.namespace.split('.') : []; if (g = h = d = d || l, d.nodeType !== 3 && d.nodeType !== 8 && !Y.test(q + n.event.triggered) && (q.indexOf('.') >= 0 && (r = q.split('.'), q = r.shift(), r.sort()), k = q.indexOf(':') < 0 && `on${q}`, b = b[n.expando] ? b : new n.Event(q, typeof b === 'object' && b), b.isTrigger = e ? 2 : 3, b.namespace = r.join('.'), b.namespace_re = b.namespace ? new RegExp(`(^|\\.)${r.join('\\.(?:.*\\.|)')}(\\.|$)`) : null, b.result = void 0, b.target || (b.target = d), c = c == null ? [b] : n.makeArray(c, [b]), o = n.event.special[q] || {}, e || !o.trigger || o.trigger.apply(d, c) !== !1)) { if (!e && !o.noBubble && !n.isWindow(d)) { for (i = o.delegateType || q, Y.test(i + q) || (g = g.parentNode); g; g = g.parentNode)p.push(g), h = g; h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a); }f = 0; while ((g = p[f++]) && !b.isPropagationStopped())b.type = f > 1 ? i : o.bindType || q, m = (O.get(g, 'events') || {})[b.type] && O.get(g, 'handle'), m && m.apply(g, c), m = k && g[k], m && m.apply && n.acceptData(g) && (b.result = m.apply(g, c), b.result === !1 && b.preventDefault()); return b.type = q, e || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !n.acceptData(d) || k && n.isFunction(d[q]) && !n.isWindow(d) && (h = d[k], h && (d[k] = null), n.event.triggered = q, d[q](), n.event.triggered = void 0, h && (d[k] = h)), b.result; } },
    dispatch(a) { a = n.event.fix(a); let b; let c; let e; let f; let g; let h = []; const i = d.call(arguments); const j = (O.get(this, 'events') || {})[a.type] || []; const k = n.event.special[a.type] || {}; if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) { h = n.event.handlers.call(this, a, j), b = 0; while ((f = h[b++]) && !a.isPropagationStopped()) { a.currentTarget = f.elem, c = 0; while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped())(!a.namespace_re || a.namespace_re.test(g.namespace)) && (a.handleObj = g, a.data = g.data, e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (a.result = e) === !1 && (a.preventDefault(), a.stopPropagation())); } return k.postDispatch && k.postDispatch.call(this, a), a.result; } },
    handlers(a, b) { let c; let d; let e; let f; const g = []; const h = b.delegateCount; let i = a.target; if (h && i.nodeType && (!a.button || a.type !== 'click')) for (;i !== this; i = i.parentNode || this) if (i.disabled !== !0 || a.type !== 'click') { for (d = [], c = 0; h > c; c++)f = b[c], e = `${f.selector} `, void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [i]).length), d[e] && d.push(f); d.length && g.push({ elem: i, handlers: d }); } return h < b.length && g.push({ elem: this, handlers: b.slice(h) }), g; },
    props: 'altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which'.split(' '),
    fixHooks: {},
    keyHooks: { props: 'char charCode key keyCode'.split(' '), filter(a, b) { return a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode), a; } },
    mouseHooks: { props: 'button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement'.split(' '), filter(a, b) { let c; let d; let e; const f = b.button; return a.pageX == null && b.clientX != null && (c = a.target.ownerDocument || l, d = c.documentElement, e = c.body, a.pageX = b.clientX + (d && d.scrollLeft || e && e.scrollLeft || 0) - (d && d.clientLeft || e && e.clientLeft || 0), a.pageY = b.clientY + (d && d.scrollTop || e && e.scrollTop || 0) - (d && d.clientTop || e && e.clientTop || 0)), a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a; } },
    fix(a) { if (a[n.expando]) return a; let b; let c; let d; const e = a.type; const f = a; let g = this.fixHooks[e]; g || (this.fixHooks[e] = g = X.test(e) ? this.mouseHooks : W.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new n.Event(f), b = d.length; while (b--)c = d[b], a[c] = f[c]; return a.target || (a.target = l), a.target.nodeType === 3 && (a.target = a.target.parentNode), g.filter ? g.filter(a, f) : a; },
    special: {
      load: { noBubble: !0 }, focus: { trigger() { return this !== ab() && this.focus ? (this.focus(), !1) : void 0; }, delegateType: 'focusin' }, blur: { trigger() { return this === ab() && this.blur ? (this.blur(), !1) : void 0; }, delegateType: 'focusout' }, click: { trigger() { return this.type === 'checkbox' && this.click && n.nodeName(this, 'input') ? (this.click(), !1) : void 0; }, _default(a) { return n.nodeName(a.target, 'a'); } }, beforeunload: { postDispatch(a) { void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result); } },
    },
    simulate(a, b, c, d) { const e = n.extend(new n.Event(), c, { type: a, isSimulated: !0, originalEvent: {} }); d ? n.event.trigger(e, null, b) : n.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault(); },
  }, n.removeEvent = function (a, b, c) { a.removeEventListener && a.removeEventListener(b, c, !1); }, n.Event = function (a, b) { return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? $ : _) : this.type = a, b && n.extend(this, b), this.timeStamp = a && a.timeStamp || n.now(), void (this[n.expando] = !0)) : new n.Event(a, b); }, n.Event.prototype = {
    isDefaultPrevented: _, isPropagationStopped: _, isImmediatePropagationStopped: _, preventDefault() { const a = this.originalEvent; this.isDefaultPrevented = $, a && a.preventDefault && a.preventDefault(); }, stopPropagation() { const a = this.originalEvent; this.isPropagationStopped = $, a && a.stopPropagation && a.stopPropagation(); }, stopImmediatePropagation() { const a = this.originalEvent; this.isImmediatePropagationStopped = $, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation(); },
  }, n.each({
    mouseenter: 'mouseover', mouseleave: 'mouseout', pointerenter: 'pointerover', pointerleave: 'pointerout',
  }, (a, b) => { n.event.special[a] = { delegateType: b, bindType: b, handle(a) { let c; const d = this; const e = a.relatedTarget; const f = a.handleObj; return (!e || e !== d && !n.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c; } }; }), k.focusinBubbles || n.each({ focus: 'focusin', blur: 'focusout' }, (a, b) => { const c = function (a) { n.event.simulate(b, a.target, n.event.fix(a), !0); }; n.event.special[b] = { setup() { const d = this.ownerDocument || this; const e = O.access(d, b); e || d.addEventListener(a, c, !0), O.access(d, b, (e || 0) + 1); }, teardown() { const d = this.ownerDocument || this; const e = O.access(d, b) - 1; e ? O.access(d, b, e) : (d.removeEventListener(a, c, !0), O.remove(d, b)); } }; }), n.fn.extend({
    on(a, b, c, d, e) { let f; let g; if (typeof a === 'object') { typeof b !== 'string' && (c = c || b, b = void 0); for (g in a) this.on(g, b, c, a[g], e); return this; } if (c == null && d == null ? (d = b, c = b = void 0) : d == null && (typeof b === 'string' ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1)d = _; else if (!d) return this; return e === 1 && (f = d, d = function (a) { return n().off(a), f.apply(this, arguments); }, d.guid = f.guid || (f.guid = n.guid++)), this.each(function () { n.event.add(this, a, d, c, b); }); }, one(a, b, c, d) { return this.on(a, b, c, d, 1); }, off(a, b, c) { let d; let e; if (a && a.preventDefault && a.handleObj) return d = a.handleObj, n(a.delegateTarget).off(d.namespace ? `${d.origType}.${d.namespace}` : d.origType, d.selector, d.handler), this; if (typeof a === 'object') { for (e in a) this.off(e, b, a[e]); return this; } return (b === !1 || typeof b === 'function') && (c = b, b = void 0), c === !1 && (c = _), this.each(function () { n.event.remove(this, a, c, b); }); }, trigger(a, b) { return this.each(function () { n.event.trigger(a, b, this); }); }, triggerHandler(a, b) { const c = this[0]; return c ? n.event.trigger(a, b, c, !0) : void 0; },
  }); const bb = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi; const cb = /<([\w:]+)/; const db = /<|&#?\w+;/; const eb = /<(?:script|style|link)/i; const fb = /checked\s*(?:[^=]|=\s*.checked.)/i; const gb = /^$|\/(?:java|ecma)script/i; const hb = /^true\/(.*)/; const ib = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; const jb = {
    option: [1, "<select multiple='multiple'>", '</select>'], thead: [1, '<table>', '</table>'], col: [2, '<table><colgroup>', '</colgroup></table>'], tr: [2, '<table><tbody>', '</tbody></table>'], td: [3, '<table><tbody><tr>', '</tr></tbody></table>'], _default: [0, '', ''],
  }; jb.optgroup = jb.option, jb.tbody = jb.tfoot = jb.colgroup = jb.caption = jb.thead, jb.th = jb.td; function kb(a, b) { return n.nodeName(a, 'table') && n.nodeName(b.nodeType !== 11 ? b : b.firstChild, 'tr') ? a.getElementsByTagName('tbody')[0] || a.appendChild(a.ownerDocument.createElement('tbody')) : a; } function lb(a) { return a.type = `${a.getAttribute('type') !== null}/${a.type}`, a; } function mb(a) { const b = hb.exec(a.type); return b ? a.type = b[1] : a.removeAttribute('type'), a; } function nb(a, b) { for (let c = 0, d = a.length; d > c; c++)O.set(a[c], 'globalEval', !b || O.get(b[c], 'globalEval')); } function ob(a, b) { let c; let d; let e; let f; let g; let h; let i; let j; if (b.nodeType === 1) { if (O.hasData(a) && (f = O.access(a), g = O.set(b, f), j = f.events)) { delete g.handle, g.events = {}; for (e in j) for (c = 0, d = j[e].length; d > c; c++)n.event.add(b, e, j[e][c]); }P.hasData(a) && (h = P.access(a), i = n.extend({}, h), P.set(b, i)); } } function pb(a, b) { const c = a.getElementsByTagName ? a.getElementsByTagName(b || '*') : a.querySelectorAll ? a.querySelectorAll(b || '*') : []; return void 0 === b || b && n.nodeName(a, b) ? n.merge([a], c) : c; } function qb(a, b) { const c = b.nodeName.toLowerCase(); c === 'input' && U.test(a.type) ? b.checked = a.checked : (c === 'input' || c === 'textarea') && (b.defaultValue = a.defaultValue); }n.extend({ clone(a, b, c) { let d; let e; let f; let g; const h = a.cloneNode(!0); const i = n.contains(a.ownerDocument, a); if (!(k.noCloneChecked || a.nodeType !== 1 && a.nodeType !== 11 || n.isXMLDoc(a))) for (g = pb(h), f = pb(a), d = 0, e = f.length; e > d; d++)qb(f[d], g[d]); if (b) if (c) for (f = f || pb(a), g = g || pb(h), d = 0, e = f.length; e > d; d++)ob(f[d], g[d]); else ob(a, h); return g = pb(h, 'script'), g.length > 0 && nb(g, !i && pb(a, 'script')), h; }, buildFragment(a, b, c, d) { for (var e, f, g, h, i, j, k = b.createDocumentFragment(), l = [], m = 0, o = a.length; o > m; m++) if (e = a[m], e || e === 0) if (n.type(e) === 'object')n.merge(l, e.nodeType ? [e] : e); else if (db.test(e)) { f = f || k.appendChild(b.createElement('div')), g = (cb.exec(e) || ['', ''])[1].toLowerCase(), h = jb[g] || jb._default, f.innerHTML = h[1] + e.replace(bb, '<$1></$2>') + h[2], j = h[0]; while (j--)f = f.lastChild; n.merge(l, f.childNodes), f = k.firstChild, f.textContent = ''; } else l.push(b.createTextNode(e)); k.textContent = '', m = 0; while (e = l[m++]) if ((!d || n.inArray(e, d) === -1) && (i = n.contains(e.ownerDocument, e), f = pb(k.appendChild(e), 'script'), i && nb(f), c)) { j = 0; while (e = f[j++])gb.test(e.type || '') && c.push(e); } return k; }, cleanData(a) { for (var b, c, d, e, f = n.event.special, g = 0; void 0 !== (c = a[g]); g++) { if (n.acceptData(c) && (e = c[O.expando], e && (b = O.cache[e]))) { if (b.events) for (d in b.events)f[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle); O.cache[e] && delete O.cache[e]; } delete P.cache[c[P.expando]]; } } }), n.fn.extend({
    text(a) { return M(this, function (a) { return void 0 === a ? n.text(this) : this.empty().each(function () { (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = a); }); }, null, a, arguments.length); },
    append() { return this.domManip(arguments, function (a) { if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) { const b = kb(this, a); b.appendChild(a); } }); },
    prepend() { return this.domManip(arguments, function (a) { if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) { const b = kb(this, a); b.insertBefore(a, b.firstChild); } }); },
    before() { return this.domManip(arguments, function (a) { this.parentNode && this.parentNode.insertBefore(a, this); }); },
    after() { return this.domManip(arguments, function (a) { this.parentNode && this.parentNode.insertBefore(a, this.nextSibling); }); },
    remove(a, b) { for (var c, d = a ? n.filter(a, this) : this, e = 0; (c = d[e]) != null; e++)b || c.nodeType !== 1 || n.cleanData(pb(c)), c.parentNode && (b && n.contains(c.ownerDocument, c) && nb(pb(c, 'script')), c.parentNode.removeChild(c)); return this; },
    empty() { for (var a, b = 0; (a = this[b]) != null; b++)a.nodeType === 1 && (n.cleanData(pb(a, !1)), a.textContent = ''); return this; },
    clone(a, b) { return a = a == null ? !1 : a, b = b == null ? a : b, this.map(function () { return n.clone(this, a, b); }); },
    html(a) { return M(this, function (a) { let b = this[0] || {}; let c = 0; const d = this.length; if (void 0 === a && b.nodeType === 1) return b.innerHTML; if (typeof a === 'string' && !eb.test(a) && !jb[(cb.exec(a) || ['', ''])[1].toLowerCase()]) { a = a.replace(bb, '<$1></$2>'); try { for (;d > c; c++)b = this[c] || {}, b.nodeType === 1 && (n.cleanData(pb(b, !1)), b.innerHTML = a); b = 0; } catch (e) {} }b && this.empty().append(a); }, null, a, arguments.length); },
    replaceWith() { let a = arguments[0]; return this.domManip(arguments, function (b) { a = this.parentNode, n.cleanData(pb(this)), a && a.replaceChild(b, this); }), a && (a.length || a.nodeType) ? this : this.remove(); },
    detach(a) { return this.remove(a, !0); },
    domManip(a, b) {
      a = e.apply([], a); let c; let d; let f; let g; let h; let i; let j = 0; const l = this.length; const m = this; const o = l - 1; const p = a[0]; const q = n.isFunction(p); if (q || l > 1 && typeof p === 'string' && !k.checkClone && fb.test(p)) return this.each(function (c) { const d = m.eq(c); q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b); }); if (l && (c = n.buildFragment(a, this[0].ownerDocument, !1, this), d = c.firstChild, c.childNodes.length === 1 && (c = d), d)) {
        for (f = n.map(pb(c, 'script'), lb), g = f.length; l > j; j++)h = c, j !== o && (h = n.clone(h, !0, !0), g && n.merge(f, pb(h, 'script'))), b.call(this[j], h, j);
        if (g) for (i = f[f.length - 1].ownerDocument, n.map(f, mb), j = 0; g > j; j++)h = f[j], gb.test(h.type || '') && !O.access(h, 'globalEval') && n.contains(i, h) && (h.src ? n._evalUrl && n._evalUrl(h.src) : n.globalEval(h.textContent.replace(ib, '')));
      } return this;
    },
  }), n.each({
    appendTo: 'append', prependTo: 'prepend', insertBefore: 'before', insertAfter: 'after', replaceAll: 'replaceWith',
  }, (a, b) => { n.fn[a] = function (a) { for (var c, d = [], e = n(a), g = e.length - 1, h = 0; g >= h; h++)c = h === g ? this : this.clone(!0), n(e[h])[b](c), f.apply(d, c.get()); return this.pushStack(d); }; }), n.fn.delay = function (a, b) { return a = n.fx ? n.fx.speeds[a] || a : a, b = b || 'fx', this.queue(b, (b, c) => { const d = setTimeout(b, a); c.stop = function () { clearTimeout(d); }; }); }, (function () { let a = l.createElement('input'); const b = l.createElement('select'); const c = b.appendChild(l.createElement('option')); a.type = 'checkbox', k.checkOn = a.value !== '', k.optSelected = c.selected, b.disabled = !0, k.optDisabled = !c.disabled, a = l.createElement('input'), a.value = 't', a.type = 'radio', k.radioValue = a.value === 't'; }()); let rb; let sb; const tb = n.expr.attrHandle; n.fn.extend({ attr(a, b) { return M(this, n.attr, a, b, arguments.length > 1); }, removeAttr(a) { return this.each(function () { n.removeAttr(this, a); }); } }), n.extend({ attr(a, b, c) { let d; let e; const f = a.nodeType; if (a && f !== 3 && f !== 8 && f !== 2) return typeof a.getAttribute === V ? n.prop(a, b, c) : (f === 1 && n.isXMLDoc(a) || (b = b.toLowerCase(), d = n.attrHooks[b] || (n.expr.match.bool.test(b) ? sb : rb)), void 0 === c ? d && 'get' in d && (e = d.get(a, b)) !== null ? e : (e = n.find.attr(a, b), e == null ? void 0 : e) : c !== null ? d && 'set' in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, `${c}`), c) : void n.removeAttr(a, b)); }, removeAttr(a, b) { let c; let d; let e = 0; const f = b && b.match(H); if (f && a.nodeType === 1) while (c = f[e++])d = n.propFix[c] || c, n.expr.match.bool.test(c) && (a[d] = !1), a.removeAttribute(c); }, attrHooks: { type: { set(a, b) { if (!k.radioValue && b === 'radio' && n.nodeName(a, 'input')) { const c = a.value; return a.setAttribute('type', b), c && (a.value = c), b; } } } } }), sb = { set(a, b, c) { return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c), c; } }, n.each(n.expr.match.bool.source.match(/\w+/g), (a, b) => { const c = tb[b] || n.find.attr; tb[b] = function (a, b, d) { let e; let f; return d || (f = tb[b], tb[b] = e, e = c(a, b, d) != null ? b.toLowerCase() : null, tb[b] = f), e; }; }); const ub = /^(?:input|select|textarea|button)$/i; n.fn.extend({ prop(a, b) { return M(this, n.prop, a, b, arguments.length > 1); }, removeProp(a) { return this.each(function () { delete this[n.propFix[a] || a]; }); } }), n.extend({ propFix: { for: 'htmlFor', class: 'className' }, prop(a, b, c) { let d; let e; let f; const g = a.nodeType; if (a && g !== 3 && g !== 8 && g !== 2) return f = g !== 1 || !n.isXMLDoc(a), f && (b = n.propFix[b] || b, e = n.propHooks[b]), void 0 !== c ? e && 'set' in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && 'get' in e && (d = e.get(a, b)) !== null ? d : a[b]; }, propHooks: { tabIndex: { get(a) { return a.hasAttribute('tabindex') || ub.test(a.nodeName) || a.href ? a.tabIndex : -1; } } } }), k.optSelected || (n.propHooks.selected = { get(a) { const b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null; } }), n.each(['tabIndex', 'readOnly', 'maxLength', 'cellSpacing', 'cellPadding', 'rowSpan', 'colSpan', 'useMap', 'frameBorder', 'contentEditable'], function () { n.propFix[this.toLowerCase()] = this; }); const vb = /[\t\r\n\f]/g; n.fn.extend({
    addClass(a) { let b; let c; let d; let e; let f; let g; const h = typeof a === 'string' && a; let i = 0; const j = this.length; if (n.isFunction(a)) return this.each(function (b) { n(this).addClass(a.call(this, b, this.className)); }); if (h) for (b = (a || '').match(H) || []; j > i; i++) if (c = this[i], d = c.nodeType === 1 && (c.className ? (` ${c.className} `).replace(vb, ' ') : ' ')) { f = 0; while (e = b[f++])d.indexOf(` ${e} `) < 0 && (d += `${e} `); g = n.trim(d), c.className !== g && (c.className = g); } return this; }, removeClass(a) { let b; let c; let d; let e; let f; let g; const h = arguments.length === 0 || typeof a === 'string' && a; let i = 0; const j = this.length; if (n.isFunction(a)) return this.each(function (b) { n(this).removeClass(a.call(this, b, this.className)); }); if (h) for (b = (a || '').match(H) || []; j > i; i++) if (c = this[i], d = c.nodeType === 1 && (c.className ? (` ${c.className} `).replace(vb, ' ') : '')) { f = 0; while (e = b[f++]) while (d.indexOf(` ${e} `) >= 0)d = d.replace(` ${e} `, ' '); g = a ? n.trim(d) : '', c.className !== g && (c.className = g); } return this; }, toggleClass(a, b) { const c = typeof a; return typeof b === 'boolean' && c === 'string' ? b ? this.addClass(a) : this.removeClass(a) : this.each(n.isFunction(a) ? function (c) { n(this).toggleClass(a.call(this, c, this.className, b), b); } : function () { if (c === 'string') { let b; let d = 0; const e = n(this); const f = a.match(H) || []; while (b = f[d++])e.hasClass(b) ? e.removeClass(b) : e.addClass(b); } else (c === V || c === 'boolean') && (this.className && O.set(this, '__className__', this.className), this.className = this.className || a === !1 ? '' : O.get(this, '__className__') || ''); }); }, hasClass(a) { for (let b = ` ${a} `, c = 0, d = this.length; d > c; c++) if (this[c].nodeType === 1 && (` ${this[c].className} `).replace(vb, ' ').indexOf(b) >= 0) return !0; return !1; },
  }); const wb = /\r/g; n.fn.extend({ val(a) { let b; let c; let d; const e = this[0]; { if (arguments.length) return d = n.isFunction(a), this.each(function (c) { let e; this.nodeType === 1 && (e = d ? a.call(this, c, n(this).val()) : a, e == null ? e = '' : typeof e === 'number' ? e += '' : n.isArray(e) && (e = n.map(e, a => (a == null ? '' : `${a}`))), b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()], b && 'set' in b && void 0 !== b.set(this, e, 'value') || (this.value = e)); }); if (e) return b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()], b && 'get' in b && void 0 !== (c = b.get(e, 'value')) ? c : (c = e.value, typeof c === 'string' ? c.replace(wb, '') : c == null ? '' : c); } } }), n.extend({ valHooks: { option: { get(a) { const b = n.find.attr(a, 'value'); return b != null ? b : n.trim(n.text(a)); } }, select: { get(a) { for (var b, c, d = a.options, e = a.selectedIndex, f = a.type === 'select-one' || e < 0, g = f ? null : [], h = f ? e + 1 : d.length, i = e < 0 ? h : f ? e : 0; h > i; i++) if (c = d[i], !(!c.selected && i !== e || (k.optDisabled ? c.disabled : c.getAttribute('disabled') !== null) || c.parentNode.disabled && n.nodeName(c.parentNode, 'optgroup'))) { if (b = n(c).val(), f) return b; g.push(b); } return g; }, set(a, b) { let c; let d; const e = a.options; const f = n.makeArray(b); let g = e.length; while (g--)d = e[g], (d.selected = n.inArray(d.value, f) >= 0) && (c = !0); return c || (a.selectedIndex = -1), f; } } } }), n.each(['radio', 'checkbox'], function () { n.valHooks[this] = { set(a, b) { return n.isArray(b) ? a.checked = n.inArray(n(a).val(), b) >= 0 : void 0; } }, k.checkOn || (n.valHooks[this].get = function (a) { return a.getAttribute('value') === null ? 'on' : a.value; }); }), n.each('blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu'.split(' '), (a, b) => { n.fn[b] = function (a, c) { return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b); }; }), n.fn.extend({
    hover(a, b) { return this.mouseenter(a).mouseleave(b || a); }, bind(a, b, c) { return this.on(a, null, b, c); }, unbind(a, b) { return this.off(a, null, b); }, delegate(a, b, c, d) { return this.on(b, a, c, d); }, undelegate(a, b, c) { return arguments.length === 1 ? this.off(a, '**') : this.off(b, a || '**', c); },
  }); let xb = n.now(); const yb = /\?/; n.parseJSON = function (a) { return JSON.parse(`${a}`); }, n.parseXML = function (a) { let b; let c; if (!a || typeof a !== 'string') return null; try { c = new DOMParser(), b = c.parseFromString(a, 'text/xml'); } catch (d) { b = void 0; } return (!b || b.getElementsByTagName('parsererror').length) && n.error(`Invalid XML: ${a}`), b; }; let zb; let Ab; const Bb = /#.*$/; const Cb = /([?&])_=[^&]*/; const Db = /^(.*?):[ \t]*([^\r\n]*)$/gm; const Eb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/; const Fb = /^(?:GET|HEAD)$/; const Gb = /^\/\//; const Hb = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/; const Ib = {}; const Jb = {}; const Kb = '*/'.concat('*'); try { Ab = location.href; } catch (Lb) { Ab = l.createElement('a'), Ab.href = '', Ab = Ab.href; }zb = Hb.exec(Ab.toLowerCase()) || []; function Mb(a) { return function (b, c) { typeof b !== 'string' && (c = b, b = '*'); let d; let e = 0; const f = b.toLowerCase().match(H) || []; if (n.isFunction(c)) while (d = f[e++])d[0] === '+' ? (d = d.slice(1) || '*', (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c); }; } function Nb(a, b, c, d) { const e = {}; const f = a === Jb; function g(h) { let i; return e[h] = !0, n.each(a[h] || [], (a, h) => { const j = h(b, c, d); return typeof j !== 'string' || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1); }), i; } return g(b.dataTypes[0]) || !e['*'] && g('*'); } function Ob(a, b) { let c; let d; const e = n.ajaxSettings.flatOptions || {}; for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]); return d && n.extend(!0, a, d), a; } function Pb(a, b, c) { let d; let e; let f; let g; const h = a.contents; const i = a.dataTypes; while (i[0] === '*')i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader('Content-Type')); if (d) for (e in h) if (h[e] && h[e].test(d)) { i.unshift(e); break; } if (i[0] in c)f = i[0]; else { for (e in c) { if (!i[0] || a.converters[`${e} ${i[0]}`]) { f = e; break; }g || (g = e); }f = f || g; } return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0; } function Qb(a, b, c, d) { let e; let f; let g; let h; let i; const j = {}; const k = a.dataTypes.slice(); if (k[1]) for (g in a.converters)j[g.toLowerCase()] = a.converters[g]; f = k.shift(); while (f) if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if (f === '*')f = i; else if (i !== '*' && i !== f) { if (g = j[`${i} ${f}`] || j[`* ${f}`], !g) for (e in j) if (h = e.split(' '), h[1] === f && (g = j[`${i} ${h[0]}`] || j[`* ${h[0]}`])) { g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1])); break; } if (g !== !0) if (g && a.throws)b = g(b); else try { b = g(b); } catch (l) { return { state: 'parsererror', error: g ? l : `No conversion from ${i} to ${f}` }; } } return { state: 'success', data: b }; }n.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: Ab,
      type: 'GET',
      isLocal: Eb.test(zb[1]),
      global: !0,
      processData: !0,
      async: !0,
      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
      accepts: {
        '*': Kb, text: 'text/plain', html: 'text/html', xml: 'application/xml, text/xml', json: 'application/json, text/javascript',
      },
      contents: { xml: /xml/, html: /html/, json: /json/ },
      responseFields: { xml: 'responseXML', text: 'responseText', json: 'responseJSON' },
      converters: {
        '* text': String, 'text html': !0, 'text json': n.parseJSON, 'text xml': n.parseXML,
      },
      flatOptions: { url: !0, context: !0 },
    },
    ajaxSetup(a, b) { return b ? Ob(Ob(a, n.ajaxSettings), b) : Ob(n.ajaxSettings, a); },
    ajaxPrefilter: Mb(Ib),
    ajaxTransport: Mb(Jb),
    ajax(a, b) {
      typeof a === 'object' && (b = a, a = void 0), b = b || {}; let c; let d; let e; let f; let g; let h; let i; let j; const k = n.ajaxSetup({}, b); const l = k.context || k; const m = k.context && (l.nodeType || l.jquery) ? n(l) : n.event; const o = n.Deferred(); const p = n.Callbacks('once memory'); let q = k.statusCode || {}; const r = {}; const s = {}; let t = 0; let u = 'canceled'; var v = {
        readyState: 0, getResponseHeader(a) { let b; if (t === 2) { if (!f) { f = {}; while (b = Db.exec(e))f[b[1].toLowerCase()] = b[2]; }b = f[a.toLowerCase()]; } return b == null ? null : b; }, getAllResponseHeaders() { return t === 2 ? e : null; }, setRequestHeader(a, b) { const c = a.toLowerCase(); return t || (a = s[c] = s[c] || a, r[a] = b), this; }, overrideMimeType(a) { return t || (k.mimeType = a), this; }, statusCode(a) { let b; if (a) if (t < 2) for (b in a)q[b] = [q[b], a[b]]; else v.always(a[v.status]); return this; }, abort(a) { const b = a || u; return c && c.abort(b), x(0, b), this; },
      }; if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, k.url = (`${a || k.url || Ab}`).replace(Bb, '').replace(Gb, `${zb[1]}//`), k.type = b.method || b.type || k.method || k.type, k.dataTypes = n.trim(k.dataType || '*').toLowerCase().match(H) || [''], k.crossDomain == null && (h = Hb.exec(k.url.toLowerCase()), k.crossDomain = !(!h || h[1] === zb[1] && h[2] === zb[2] && (h[3] || (h[1] === 'http:' ? '80' : '443')) === (zb[3] || (zb[1] === 'http:' ? '80' : '443')))), k.data && k.processData && typeof k.data !== 'string' && (k.data = n.param(k.data, k.traditional)), Nb(Ib, k, b, v), t === 2) return v; i = k.global, i && n.active++ === 0 && n.event.trigger('ajaxStart'), k.type = k.type.toUpperCase(), k.hasContent = !Fb.test(k.type), d = k.url, k.hasContent || (k.data && (d = k.url += (yb.test(d) ? '&' : '?') + k.data, delete k.data), k.cache === !1 && (k.url = Cb.test(d) ? d.replace(Cb, `$1_=${xb++}`) : `${d + (yb.test(d) ? '&' : '?')}_=${xb++}`)), k.ifModified && (n.lastModified[d] && v.setRequestHeader('If-Modified-Since', n.lastModified[d]), n.etag[d] && v.setRequestHeader('If-None-Match', n.etag[d])), (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader('Content-Type', k.contentType), v.setRequestHeader('Accept', k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + (k.dataTypes[0] !== '*' ? `, ${Kb}; q=0.01` : '') : k.accepts['*']); for (j in k.headers)v.setRequestHeader(j, k.headers[j]); if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || t === 2)) return v.abort(); u = 'abort'; for (j in { success: 1, error: 1, complete: 1 })v[j](k[j]); if (c = Nb(Jb, k, b, v)) { v.readyState = 1, i && m.trigger('ajaxSend', [v, k]), k.async && k.timeout > 0 && (g = setTimeout(() => { v.abort('timeout'); }, k.timeout)); try { t = 1, c.send(r, x); } catch (w) { if (!(t < 2)) throw w; x(-1, w); } } else x(-1, 'No Transport'); function x(a, b, f, h) { let j; let r; let s; let u; let w; let x = b; t !== 2 && (t = 2, g && clearTimeout(g), c = void 0, e = h || '', v.readyState = a > 0 ? 4 : 0, j = a >= 200 && a < 300 || a === 304, f && (u = Pb(k, v, f)), u = Qb(k, u, v, j), j ? (k.ifModified && (w = v.getResponseHeader('Last-Modified'), w && (n.lastModified[d] = w), w = v.getResponseHeader('etag'), w && (n.etag[d] = w)), a === 204 || k.type === 'HEAD' ? x = 'nocontent' : a === 304 ? x = 'notmodified' : (x = u.state, r = u.data, s = u.error, j = !s)) : (s = x, (a || !x) && (x = 'error', a < 0 && (a = 0))), v.status = a, v.statusText = `${b || x}`, j ? o.resolveWith(l, [r, x, v]) : o.rejectWith(l, [v, x, s]), v.statusCode(q), q = void 0, i && m.trigger(j ? 'ajaxSuccess' : 'ajaxError', [v, k, j ? r : s]), p.fireWith(l, [v, x]), i && (m.trigger('ajaxComplete', [v, k]), --n.active || n.event.trigger('ajaxStop'))); } return v;
    },
    getJSON(a, b, c) { return n.get(a, b, c, 'json'); },
    getScript(a, b) { return n.get(a, void 0, b, 'script'); },
  }), n.each(['get', 'post'], (a, b) => {
    n[b] = function (a, c, d, e) {
      return n.isFunction(c) && (e = e || d, d = c, c = void 0), n.ajax({
        url: a, type: b, dataType: e, data: c, success: d,
      });
    };
  }), n.each(['ajaxStart', 'ajaxStop', 'ajaxComplete', 'ajaxError', 'ajaxSuccess', 'ajaxSend'], (a, b) => { n.fn[b] = function (a) { return this.on(b, a); }; }), n._evalUrl = function (a) {
    return n.ajax({
      url: a, type: 'GET', dataType: 'script', async: !1, global: !1, throws: !0,
    });
  }; const Rb = /%20/g; const Sb = /\[\]$/; const Tb = /\r?\n/g; const Ub = /^(?:submit|button|image|reset|file)$/i; const Vb = /^(?:input|select|textarea|keygen)/i; function Wb(a, b, c, d) { let e; if (n.isArray(b))n.each(b, (b, e) => { c || Sb.test(a) ? d(a, e) : Wb(`${a}[${typeof e === 'object' ? b : ''}]`, e, c, d); }); else if (c || n.type(b) !== 'object')d(a, b); else for (e in b)Wb(`${a}[${e}]`, b[e], c, d); }n.param = function (a, b) { let c; const d = []; const e = function (a, b) { b = n.isFunction(b) ? b() : b == null ? '' : b, d[d.length] = `${encodeURIComponent(a)}=${encodeURIComponent(b)}`; }; if (void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional), n.isArray(a) || a.jquery && !n.isPlainObject(a))n.each(a, function () { e(this.name, this.value); }); else for (c in a)Wb(c, a[c], b, e); return d.join('&').replace(Rb, '+'); }, n.fn.extend({ serialize() { return n.param(this.serializeArray()); }, serializeArray() { return this.map(function () { const a = n.prop(this, 'elements'); return a ? n.makeArray(a) : this; }).filter(function () { const a = this.type; return this.name && !n(this).is(':disabled') && Vb.test(this.nodeName) && !Ub.test(a) && (this.checked || !U.test(a)); }).map(function (a, b) { const c = n(this).val(); return c == null ? null : n.isArray(c) ? n.map(c, a => ({ name: b.name, value: a.replace(Tb, '\r\n') })) : { name: b.name, value: c.replace(Tb, '\r\n') }; }).get(); } }), n.ajaxSettings.xhr = function () { try { return new XMLHttpRequest(); } catch (a) {} }; let Xb = 0; const Yb = {}; const Zb = { 0: 200, 1223: 204 }; let $b = n.ajaxSettings.xhr(); a.ActiveXObject && n(a).on('unload', () => { for (const a in Yb)Yb[a](); }), k.cors = !!$b && 'withCredentials' in $b, k.ajax = $b = !!$b, n.ajaxTransport((a) => { let b; return k.cors || $b && !a.crossDomain ? { send(c, d) { let e; const f = a.xhr(); const g = ++Xb; if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields) for (e in a.xhrFields)f[e] = a.xhrFields[e]; a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c['X-Requested-With'] || (c['X-Requested-With'] = 'XMLHttpRequest'); for (e in c)f.setRequestHeader(e, c[e]); b = function (a) { return function () { b && (delete Yb[g], b = f.onload = f.onerror = null, a === 'abort' ? f.abort() : a === 'error' ? d(f.status, f.statusText) : d(Zb[f.status] || f.status, f.statusText, typeof f.responseText === 'string' ? { text: f.responseText } : void 0, f.getAllResponseHeaders())); }; }, f.onload = b(), f.onerror = b('error'), b = Yb[g] = b('abort'); try { f.send(a.hasContent && a.data || null); } catch (h) { if (b) throw h; } }, abort() { b && b(); } } : void 0; }), n.ajaxSetup({ accepts: { script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript' }, contents: { script: /(?:java|ecma)script/ }, converters: { 'text script': function (a) { return n.globalEval(a), a; } } }), n.ajaxPrefilter('script', (a) => { void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = 'GET'); }), n.ajaxTransport('script', (a) => { if (a.crossDomain) { let b; let c; return { send(d, e) { b = n('<script>').prop({ async: !0, charset: a.scriptCharset, src: a.url }).on('load error', c = function (a) { b.remove(), c = null, a && e(a.type === 'error' ? 404 : 200, a.type); }), l.head.appendChild(b[0]); }, abort() { c && c(); } }; } }); const _b = []; const ac = /(=)\?(?=&|$)|\?\?/; n.ajaxSetup({ jsonp: 'callback', jsonpCallback() { const a = _b.pop() || `${n.expando}_${xb++}`; return this[a] = !0, a; } }), n.ajaxPrefilter('json jsonp', (b, c, d) => { let e; let f; let g; const h = b.jsonp !== !1 && (ac.test(b.url) ? 'url' : typeof b.data === 'string' && !(b.contentType || '').indexOf('application/x-www-form-urlencoded') && ac.test(b.data) && 'data'); return h || b.dataTypes[0] === 'jsonp' ? (e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(ac, `$1${e}`) : b.jsonp !== !1 && (b.url += `${(yb.test(b.url) ? '&' : '?') + b.jsonp}=${e}`), b.converters['script json'] = function () { return g || n.error(`${e} was not called`), g[0]; }, b.dataTypes[0] = 'json', f = a[e], a[e] = function () { g = arguments; }, d.always(() => { a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, _b.push(e)), g && n.isFunction(f) && f(g[0]), g = f = void 0; }), 'script') : void 0; }), n.parseHTML = function (a, b, c) { if (!a || typeof a !== 'string') return null; typeof b === 'boolean' && (c = b, b = !1), b = b || l; let d = y.exec(a); const e = !c && []; return d ? [b.createElement(d[1])] : (d = n.buildFragment([a], b, e), e && e.length && n(e).remove(), n.merge([], d.childNodes)); }; const bc = n.fn.load; n.fn.load = function (a, b, c) {
    if (typeof a !== 'string' && bc) return bc.apply(this, arguments); let d; let e; let f; const g = this; const h = a.indexOf(' '); return h >= 0 && (d = n.trim(a.slice(h)), a = a.slice(0, h)), n.isFunction(b) ? (c = b, b = void 0) : b && typeof b === 'object' && (e = 'POST'), g.length > 0 && n.ajax({
      url: a, type: e, dataType: 'html', data: b,
    }).done(function (a) { f = arguments, g.html(d ? n('<div>').append(n.parseHTML(a)).find(d) : a); }).complete(c && ((a, b) => { g.each(c, f || [a.responseText, b, a]); })), this;
  }, typeof define === 'function' && define.amd && define('jquery', [], () => n); const cc = a.jQuery; const dc = a.$; return n.noConflict = function (b) { return a.$ === n && (a.$ = dc), b && a.jQuery === n && (a.jQuery = cc), n; }, typeof b === V && (a.jQuery = a.$ = n), n;
}));
// # sourceMappingURL=jquery.min.map
